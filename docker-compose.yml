version: '3'

networks:
  mini-tiktok_net:
    driver: bridge

services:
  
  mini_tiktok:
    image: lyumikael/gomodd:v1.0.0 # if you "macOs intel" or "linux amd"
    # image: lyumikael/go-modd-env  # if you macOs m1
    build:
      context: .
      dockerfile: deploy/modd.DockerFile
    container_name: mini-tiktok
    environment:
      TZ: Asia/Shanghai
      GOPROXY: https://goproxy.cn,direct
    working_dir: /Users/toma/Projects/micro-douyin
    volumes:
      - .:/Users/toma/Projects/micro-douyin
    privileged: true
    restart: always
    networks:
      - mini-tiktok_net
    ports:
      - "8888:8888"
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql/mysql-server:8.0.28
    container_name: mysql
    environment:
      # 时区上海 - Time zone Shanghai (Change if needed)
      TZ: Asia/Shanghai
      # root 密码 - root password
      MYSQL_ROOT_PASSWORD: Berpa!513
    ports:
      - "33069:3306"
    volumes:
      # 数据挂载 - Data mounting
      - ./deploy/data/mysql/data:/var/lib/mysql
      # 日志
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配) 
      # Modify the Mysql 8.0 default password strategy to the original strategy (MySQL8.0 to change its default strategy will cause the password to be unable to match)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    privileged: true
    restart: always
    networks:
      - mini-tiktok_net

  # redis容器 - Redis container
  redis:
    image: redis:6.2.5
    container_name: redis
    ports:
      - "36379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      # 数据文件 - data files
      - ./deploy/data/redis/data:/data:rw
    command: "redis-server --requirepass berpa!513  --appendonly yes"
    privileged: true
    restart: always
    networks:
      - mini-tiktok_net 



